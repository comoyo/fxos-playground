_ = require("underscore")
React = require("react")
Ajax = require("./ajax")
config = require("../etc/config")
moment = require("moment")
Init = require("./init")

LunchTime = React.createClass {
  getInitialState: -> {ajax: new Ajax()}
  getDataForTimestamp: (timestamp, callback) ->
    timestamp.lang("nb_NO") #We want norwegian time zone for Fornebu
    url = config.lunchUrlTemplate
      .replace "${year4digits}", timestamp.year()
      .replace "${week2digits}", timestamp.format("ww")
    @state.ajax.getJson(url)
      .then (data) ->
        dataForDay = _.find(data, (day) -> day.date == timestamp.format("DD-MM-YYYY"))
        callback dataForDay
      , (error) -> console.error "Error #{JSON.stringify(error)}"
    .done()
  setupWithTimestamp: (timestamp) -> @getDataForTimestamp timestamp, @renderForDayData
  onWakeup: -> @setupWithTimestamp moment()
  renderForDayData: (data) ->
    props = @props
    React.unmountComponentAtNode @refs.root.getDOMNode()
    React.renderComponent `<DailyContent data={data} lang={props.lang} />` , @refs.root.getDOMNode()
  componentDidMount: -> @setupWithTimestamp moment()
  render: -> `(<div ref="root" className="lunchtimeRoot"></div>)`
}

DailyContent = React.createClass {
  render: ->
    props = @props
    return `(
      <div className="dailyContent">
      <h2>Menu du jour:</h2>
      {props.data.cantines.map(function(cantine){
          return <CantineContent key={cantine.name} data={cantine} lang={props.lang} />
        })
      }
      <div className="dailyFooter">Tor Arvid, Denis &amp;<br />Hans Christian</div>
      </div>
    )`
}

CantineContent = React.createClass {
  render: ->
    props = @props
    return `(
      <div className="cantineContent">
        <div className="cantineHeader">
          <div className="cantineName">
            <div className={"cantineNameFlag flag" + props.data.name}></div>
            <span className={props.data.name}>{props.data.name}</span>
          </div>
          <div className="cantineLocation"><span>{props.data.location}</span></div>
        </div>
        <div className="cantineLunch">
          <table>
            {props.data.meal.lunch.map(function(item) {
                return (
                  <tr key={item.type}>
                    <th>{config.lang[props.lang][item.type]}:</th>
                    <td>{item[props.lang]}</td>
                  </tr>)
              })
            }
          </table>
        </div>
      </div>
    )`
}

init = new Init()
app = React.renderComponent `<LunchTime lang="no"/>`, document.getElementById('lunchtimeContainer')
init.registerPageVisibility app.onWakeup

module.exports = LunchTime
